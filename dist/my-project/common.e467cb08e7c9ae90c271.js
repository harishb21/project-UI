"use strict";(self.webpackChunkmy_project=self.webpackChunkmy_project||[]).push([[592],{8734:(p,o,r)=>{r.d(o,{w:()=>h});var l=r(7716),t=r(1841);let h=(()=>{class a{constructor(e){this.http=e,this.allPatients=[],this.baseurl="http://localhost:8085/admin/"}getAllPatient(e,s,i,c){return this.http.get(`${this.baseurl}patient-list`,{params:{page:e,size:s,columnName:i,direction:c}})}getAllUsers(e,s,i,c){return this.http.get(`${this.baseurl}user-list`,{params:{page:e,size:s,columnName:i,direction:c}})}editPatientStatus(e){return this.http.put(`${this.baseurl}patient/editstatus`,e)}editEmployeeStatus(e){return this.http.put(`${this.baseurl}/employee/editstatus/`,e)}getPatientCount(){return this.http.get(this.baseurl+"patients/patientcount")}getEmployeeCount(){return this.http.get(this.baseurl+"user/usercount")}getFilterPatientRecord(e,s,i,c){return this.http.get(`${this.baseurl}filter/patient-list`,{params:{page:e,size:s,direction:i,filterValue:c}})}getFilterEmployeeRecord(e,s,i,c){return this.http.get(`${this.baseurl}filter/user-list`,{params:{page:e,size:s,direction:i,filterValue:c}})}getAllPatientEmail(){return this.http.get(`${this.baseurl}patient/allpatients`)}getAllActivePatientEmail(){return this.http.get(`${this.baseurl}patient/allactivepatients`)}getAllEmployeeEmail(){return this.http.get(`${this.baseurl}employees/allemployees`)}getAllActiveEmployeeEmail(){return this.http.get(`${this.baseurl}employees/allactiveemployees`)}}return a.\u0275fac=function(e){return new(e||a)(l.LFG(t.eN))},a.\u0275prov=l.Yz7({token:a,factory:a.\u0275fac,providedIn:"root"}),a})()},8487:(p,o,r)=>{r.d(o,{n:()=>h});var l=r(7716),t=r(1841);let h=(()=>{class a{constructor(e){this.http=e,this.baseUrl="http://localhost:8083"}getDiagnosis(){return this.http.get(this.baseUrl+"/diagnosis/allDiagnosis")}saveDiagnosis(e){this.http.post(this.baseUrl+"/diagnosis/master/save",e).subscribe(()=>{console.log("data saved!!")})}getActiveDiagnosis(){return console.log("service called"),this.http.get(this.baseUrl+"/diagnosis/master/active/diagnosis")}}return a.\u0275fac=function(e){return new(e||a)(l.LFG(t.eN))},a.\u0275prov=l.Yz7({token:a,factory:a.\u0275fac,providedIn:"root"}),a})()},5575:(p,o,r)=>{r.d(o,{f:()=>h});var l=r(7716),t=r(1841);let h=(()=>{class a{constructor(e){this.http=e,this.baseUrl="http://localhost:8083"}getDrugs(){return this.http.get(this.baseUrl+"/drug/master/drugs")}addNewDrug(e){this.http.post(this.baseUrl+"/drug/master/save",e).subscribe(s=>{console.log("data saved!"),console.log(s)})}}return a.\u0275fac=function(e){return new(e||a)(l.LFG(t.eN))},a.\u0275prov=l.Yz7({token:a,factory:a.\u0275fac,providedIn:"root"}),a})()},9655:(p,o,r)=>{r.d(o,{L:()=>h});var l=r(7716),t=r(1841);let h=(()=>{class a{constructor(e){this.http=e,this.baseUrl="http://localhost:8083"}getProcedures(){return this.http.get(this.baseUrl+"/procedure/master/procedures")}saveProcedures(e){this.http.post(this.baseUrl+"/procedure/master/save",e).subscribe(()=>{console.log("data saved!!")})}getActiveProcedures(){return this.http.get(this.baseUrl+"/procedure/master/active/procedures")}}return a.\u0275fac=function(e){return new(e||a)(l.LFG(t.eN))},a.\u0275prov=l.Yz7({token:a,factory:a.\u0275fac,providedIn:"root"}),a})()},1024:(p,o,r)=>{r.d(o,{B:()=>l});var l=(()=>{return(t=l||(l={})).REQUIRED="This field cannot be empty",t.TITLE_REQUIRED="Kindly select the title.",t.FIRSTNAME_REQUIRED="First name cannot be empty.",t.LASTNAME_REQUIRED="Last name cannot be empty.",t.ABBREVIATION_NOT_REQUIRED="Please don\u2019t use abbreviations",t.EMAIL_REQUIRED="Please enter your email address e.g. exampleusername@xyzdomain.com",t.EMAIL_INVALID="Email Id is already present",t.VALID_DATE_REQUITED="Please enter a valid date",t.VALID_BIRTH_DATE_REQUIRED="Please enter a valid date of birth",t.ROLE_REQUIRED="Please select a valid role.",t.FORM_PASSWORD_CRITERIA="Password is weak. Please re-enter the password with a minimum of one\n    Uppercase letter, one lowercase letter, one number and minimum length of\n    8 characters",t.FORM_PASSWORD_NOT_MATCH="Passwords do not match. Please re-enter the password",t.CONFIRM_PASSWORD_NOT_MATCH="Password entries don\u2019t match",t.PASSWORD_PATTERN_NOT_MATCH="Password entry does not meet criteria",t.OLD_PASSWORD_REQUIRED="Kindly provide correct old password",t.ACCOUNT_LOCKED="Your account has been locked for next 24 hours for security purpose.\n    Please contact the hospital administrator or call helpdesk on 123456 for\n    more information.",t.GENDER_REQUIRED="Gender is a required field.",t.RACE_REQUIRED="Race field cannot be empty.",t.ETHNICITY_REQUIRED="Ethnicity field cannot be empty.",t.LANGUAGE_REQUIRED="Languages Known cannot be empty.",t.ADDRESS_REQUIRED="Please provide the postal address.",t.COUNTRY_CODE_REQUIRED="Please provide the Country/Area code.",t.TELEPHONE_NUMBER_REQIRED="Please provide the telephone number.",t.TELEPHONE_NUMBER_NOT_LESS_THAN_7="Please validate the phone number. Telephone number has XX number of digits",t.ONE_OR_MORE_MISSING_VALUES="The form contains one or more missing values",l;var t})()},7453:(p,o,r)=>{r.d(o,{n:()=>l});class l{constructor(){}}},4293:(p,o,r)=>{r.d(o,{e:()=>a});var l=r(8002),t=r(7716),h=r(1841);let a=(()=>{class n{constructor(s){this.http=s,this.patientList=[],this.baseUrl="http://localhost:8083",this.getAllPatient()}updatePatientDetails(s){this.http.post("http://localhost:8083/patient/save",s).subscribe(i=>{console.log(i)})}getAllAllergiesOfPatient(s){return this.http.get(this.baseUrl+"/allergy/getByPatientId/"+s)}saveAllergy(s){this.http.post(this.baseUrl+"/allergy/save",s).subscribe(i=>{console.log(i)})}fetchPatient(s){return this.http.get(this.baseUrl+"/patient/getById/"+s)}getAllPatient(){return this.http.get(this.baseUrl+"/patient/getAll")}fetchAllAllergyIds(){return this.http.get(this.baseUrl+"/allergy/ids")}getAllergy(){return this.http.get(this.baseUrl+"/allergy/allAllergy")}getAllergyName(){return this.http.get(this.baseUrl+"/allergy/allAllergy").pipe((0,l.U)(s=>s.map(i=>i.allergyName)))}getAllergyType(){return this.http.get(this.baseUrl+"/allergy/allAllergy").pipe((0,l.U)(s=>s.map(i=>i.allergyType)))}deleteAllergy(s){console.log("url: "+this.baseUrl+"/allergy/delete/"+s),this.http.delete(this.baseUrl+"/allergy/delete/"+s).subscribe(i=>{console.log(i)})}getAllergyById(s){return console.log("service"+s),this.http.get(this.baseUrl+"patient/getAllergyByCode/"+s)}}return n.\u0275fac=function(s){return new(s||n)(t.LFG(h.eN))},n.\u0275prov=t.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),n})()}}]);